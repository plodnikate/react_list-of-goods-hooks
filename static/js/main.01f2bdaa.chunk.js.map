{"version":3,"sources":["types.ts","Buttons.tsx","GoodsList.tsx","utils.ts","App.tsx","index.tsx"],"names":["SortType","SortButtons","sortField","isReversed","setSortField","handleReversedToggle","handleReset","isSorted","DEFAULT","className","type","cn","ALPHABET","onClick","LENGTH","GoodsList","goods","map","good","GOODS_FROM_SERVER","App","useState","setIsReversed","displayedGoods","setDisplayedGoods","useEffect","sortedGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","prevState","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,6EAAAA,K,oBAAAA,E,gBAAAA,E,mBAAAA,M,gBCYCC,EACT,SAAC,GAMI,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,YAEMC,EAAWL,IAAcF,EAASQ,SAAWL,EAEnD,OACE,sBAAKM,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYT,IAAcF,EAASY,WAErCC,QAAS,kBAAMT,EAAaJ,EAASY,WALvC,iCAUA,wBACEF,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYT,IAAcF,EAASc,SAErCD,QAAS,kBAAMT,EAAaJ,EAASc,SALvC,4BAUA,wBACEJ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaR,IAEfU,QAASR,EALX,qBAUCE,GACC,wBACEG,KAAK,SACLD,UAAU,4BACVI,QAASP,EAHX,uBCjDGS,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SCTAC,EAAoB,CAC/B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UCJWC,EAAgB,WAC3B,MAAkCC,mBAASrB,EAASQ,SAApD,mBAAON,EAAP,KAAkBE,EAAlB,KACA,EAAoCiB,oBAAS,GAA7C,mBAAOlB,EAAP,KAAmBmB,EAAnB,KACA,EAA4CD,mBAAS,YAAIF,IAAzD,mBAAOI,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WAERD,EDCA,SAACR,EAAD,GAAiE,IAA7Cd,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WAC/B,GAAID,IAAcF,EAASQ,QACzB,OAAOW,EAGT,IAAMO,EAAW,YAAOV,GAiBxB,OAfAU,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQ3B,GACN,KAAKF,EAASY,SACZ,OAAOgB,EAAME,cAAcD,GAC7B,KAAK7B,EAASc,OACZ,OAAOc,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAIT5B,GACFuB,EAAYM,UAGPN,ECvBWO,CAAeV,EAAgB,CAAErB,YAAWC,kBAC7D,CAACD,EAAWC,IAWf,OACE,sBAAKM,UAAU,kBAAf,UACE,cAAC,EAAD,CACEP,UAAWA,EACXC,WAAYA,EACZC,aAAcA,EACdC,qBAVuB,WAC3BiB,GAAc,SAAAY,GAAS,OAAKA,MAUxB5B,YAhBc,WAClBF,EAAaJ,EAASQ,SACtBc,GAAc,MAgBZ,cAAC,EAAD,CAAWN,MAAOO,QCjCxBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.01f2bdaa.chunk.js","sourcesContent":["export enum SortType {\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n  DEFAULT = 'default',\n}\n\nexport type SortingOptions = {\n  sortField: SortType,\n  isReversed: boolean,\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { SortType } from './types';\n\ntype Props = {\n  sortField: SortType,\n  isReversed: boolean,\n  setSortField: (type: SortType) => void,\n  handleReversedToggle: () => void,\n  handleReset: () => void,\n};\n\nexport const SortButtons: React.FC<Props>\n  = ({\n    sortField,\n    isReversed,\n    setSortField,\n    handleReversedToggle,\n    handleReset,\n  }) => {\n    const isSorted = sortField !== SortType.DEFAULT || isReversed;\n\n    return (\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortField(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.LENGTH,\n          })}\n          onClick={() => setSortField(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReversedToggle}\n        >\n          Reverse\n        </button>\n\n        {isSorted && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n    );\n  };\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import { SortType, SortingOptions } from './types';\n\nexport const GOODS_FROM_SERVER = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const getSortedGoods\n  = (goods: string[], { sortField, isReversed }: SortingOptions) => {\n    if (sortField === SortType.DEFAULT) {\n      return GOODS_FROM_SERVER;\n    }\n\n    const sortedGoods = [...goods];\n\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      sortedGoods.reverse();\n    }\n\n    return sortedGoods;\n  };\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { SortButtons } from './Buttons';\nimport { GoodsList } from './GoodsList';\nimport { SortType } from './types';\nimport { getSortedGoods, GOODS_FROM_SERVER } from './utils';\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n  const [displayedGoods, setDisplayedGoods] = useState([...GOODS_FROM_SERVER]);\n\n  useEffect(() => {\n    // eslint-disable-next-line max-len\n    setDisplayedGoods(getSortedGoods(displayedGoods, { sortField, isReversed }));\n  }, [sortField, isReversed]);\n\n  const handleReset = () => {\n    setSortField(SortType.DEFAULT);\n    setIsReversed(false);\n  };\n\n  const handleReversedToggle = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  return (\n    <div className=\"section content\">\n      <SortButtons\n        sortField={sortField}\n        isReversed={isReversed}\n        setSortField={setSortField}\n        handleReversedToggle={handleReversedToggle}\n        handleReset={handleReset}\n      />\n      <GoodsList goods={displayedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}